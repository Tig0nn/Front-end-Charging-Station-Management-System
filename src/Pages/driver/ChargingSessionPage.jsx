import React, { useState, useEffect } from "react";
import { Spinner } from "react-bootstrap";
import { stationsAPI } from "../../lib/apiServices.js";

export default function ChargingSessionPage({ sessionId }) {
  const [session, setSession] = useState(null);
  const [loading, setLoading] = useState(false);

  const formatTime = (sec) => {
    const m = Math.floor(sec / 60);
    const s = sec % 60;
    return `${m}:${s.toString().padStart(2, "0")}`;
  };

  useEffect(() => {
    if (!sessionId) return;

    const fetchSession = async () => {
      try {
        setLoading(true);
        const res = await stationsAPI.fake(sessionId);
        const data = res.data.result;
        setSession(data);
      } catch (err) {
        console.log("L·ªói t·∫£i session s·∫°c:", err);
        setSession(null);
      } finally {
        setLoading(false);
      }
    };

    fetchSession();
    const timer = setInterval(fetchSession, 5000);
    return () => clearInterval(timer);
  }, [sessionId]);

  // -------------------- M√ÄN H√åNH KH√îNG C√ì SESSION --------------------
  if (!sessionId) {
    return (
      <div className="min-h-screen bg-gray-50 px-8 py-10">
        <div className="max-w-6xl mx-auto text-center">
          {/* Th√¥ng b√°o kh√¥ng c√≥ phi√™n s·∫°c */}
          <div className="bg-white rounded-2xl shadow-sm py-16 px-6 border mb-8">
            <div className="text-5xl mb-4">‚ö°</div>
            <h2 className="text-2xl font-semibold mb-2">
              Hi·ªán kh√¥ng c√≥ phi√™n s·∫°c n√†o ƒëang di·ªÖn ra
            </h2>
            <p className="text-gray-600">
              Vui l√≤ng ch·ªçn tr·∫°m s·∫°c t·ª´ tab <b>‚ÄúB·∫£n ƒë·ªì tr·∫°m s·∫°c‚Äù</b> ƒë·ªÉ b·∫Øt ƒë·∫ßu.
            </p>
          </div>

          {/* Grid h∆∞·ªõng d·∫´n + th√¥ng tin xe */}
          <div className="grid md:grid-cols-2 gap-6">
            {/* H∆∞·ªõng d·∫´n */}
            <div className="bg-blue-50 rounded-xl p-5 text-left border border-blue-100">
              <h3 className="text-lg font-semibold mb-3">H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng</h3>
              <ol className="text-gray-700 space-y-2 text-sm list-decimal list-inside">
                <li>T√¨m tr·∫°m s·∫°c: M·ªü tab ‚ÄúB·∫£n ƒë·ªì tr·∫°m s·∫°c‚Äù.</li>
                <li>Ch·ªçn tr·ª• s·∫°c: B·∫•m ‚ÄúS·∫°c‚Äù tr√™n tr·∫°m ph√π h·ª£p.</li>
                <li>K·∫øt n·ªëi v√† s·∫°c: C·∫Øm s·∫°c v√†o xe trong 5 ph√∫t.</li>
                <li>
                  Theo d√µi & thanh to√°n: Ki·ªÉm tra ti·∫øn ƒë·ªô v√† thanh to√°n khi ho√†n
                  t·∫•t.
                </li>
              </ol>
            </div>

            {/* Th√¥ng tin xe */}
            <div className="bg-white rounded-xl p-5 border">
              <h3 className="text-lg font-semibold mb-3">
                Th√¥ng tin xe hi·ªán t·∫°i
              </h3>
              <div className="flex justify-between items-center mb-2">
                <span>M·ª©c pin hi·ªán t·∫°i:</span>
                <span>75%</span>
              </div>
              <div className="w-full bg-gray-200 h-4 rounded-full overflow-hidden mb-3">
                <div className="bg-black h-full" style={{ width: "75%" }}></div>
              </div>
              <div className="text-sm text-gray-600 space-y-1">
                <p>Dung l∆∞·ª£ng pin: 60 kWh</p>
                <p>Ph·∫°m vi c√≤n l·∫°i: ~300 km</p>
                <p>Lo·∫°i c·ªïng s·∫°c: CCS Combo 2</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // -------------------- M√ÄN H√åNH ƒêANG S·∫†C --------------------
  if (loading || !session) {
    return (
      <div className="min-h-screen flex justify-center items-center">
        <Spinner animation="border" variant="primary" />
        <span className="ml-2 text-gray-700">
          ƒêang t·∫£i d·ªØ li·ªáu phi√™n s·∫°c...
        </span>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 px-8 py-10">
      <div className="max-w-6xl mx-auto">
        <div className="grid md:grid-cols-2 gap-8">
          {/* C·ªòT TR√ÅI: Th√¥ng tin s·∫°c */}
          <div className="bg-white rounded-2xl shadow-sm border p-6 space-y-6">
            <div className="flex justify-between items-center">
              <h2 className="text-lg font-semibold">
                ƒêang s·∫°c t·∫°i <b>{session.stationName}</b>
              </h2>
              <span className="text-green-700 bg-green-100 px-3 py-1 rounded-lg text-sm font-medium">
                {session.statusMessage}
              </span>
            </div>

            <div>
              <div className="flex justify-between text-sm text-gray-600 mb-1">
                <span>M·ª©c pin hi·ªán t·∫°i</span>
                <span>{session.currentSocPercent}%</span>
              </div>
              <div className="w-full bg-gray-200 h-4 rounded-full overflow-hidden">
                <div
                  className="bg-green-600 h-full"
                  style={{
                    width: `${session.currentSocPercent}%`,
                    transition: "width 0.3s",
                  }}
                ></div>
              </div>
            </div>

            <div className="grid grid-cols-2 gap-4 text-sm text-gray-700">
              <p>üîå Lo·∫°i c·ªïng s·∫°c: {session.plugType}</p>
              <p>‚öôÔ∏è ƒêi·ªán √°p: {session.voltage}</p>
              <p>üîã Dung l∆∞·ª£ng pin: {session.batteryCapacity}</p>
              <p>üìç Tr·∫°m: {session.stationName}</p>
            </div>

            <div className="flex justify-between items-center border-t pt-4 text-gray-700">
              <div>
                <p className="text-sm">
                  C√¥ng su·∫•t: <b>{session.maxPowerKw}kW</b>
                </p>
                <p className="text-sm">
                  Gi√° ƒëi·ªán: <b>{session.pricePerKwh.toLocaleString()}ƒë/kWh</b>
                </p>
              </div>
              <div className="text-right">
                <p className="text-sm text-gray-500">Th·ªùi gian ƒë√£ s·∫°c</p>
                <p className="font-semibold text-lg">
                  {formatTime(session.elapsedTimeMinutes * 60)}
                </p>
              </div>
            </div>
          </div>

          {/* C·ªòT PH·∫¢I: D·ª± ki·∫øn ho√†n th√†nh & chi ph√≠ */}
          <div className="space-y-6">
            <div className="bg-white rounded-2xl border shadow-sm p-6">
              <h3 className="font-semibold text-gray-700 mb-3">
                {" "}
                D·ª± ki·∫øn ho√†n th√†nh
              </h3>
              <div className="text-green-600 text-3xl font-bold mb-1">
                {session.estimatedRemainingMinutes} ph√∫t
              </div>
              <p className="text-gray-500 text-sm mb-2">
                Th·ªùi gian c√≤n l·∫°i (∆∞·ªõc t√≠nh)
              </p>
              <p className="text-gray-700 text-sm">
                M·ª•c ti√™u: <b>{session.targetSocPercent}%</b>
              </p>
            </div>

            <div className="bg-white rounded-2xl border shadow-sm p-6">
              <h3 className="font-semibold text-gray-700 mb-3">
                {" "}
                Chi ph√≠ hi·ªán t·∫°i
              </h3>
              <p className="text-3xl font-bold text-blue-600 mb-1">
                {session.currentCost.toLocaleString()}ƒë
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
